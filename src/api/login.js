// Generated by CoffeeScript 2.2.2
var login, register, resetPsd,
  _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

import {
  json,
  send
} from 'micro';

import services from '../services/leancloud';

import {
  verifyToken,
  refreshToken,
  generateToken
} from '../../sources/utils/helper';

register = async(req, res) => {
  var body, isDelete, personId, personResult, result, username;
  body = (await json(req));
  isDelete = false;
  username = body.username;
  personResult = (await services.Person.create({username, isDelete}));
  personId = personResult.objectId;
  return result = (await services.Login.register(_extends({}, body, {personId})));
};

login = async(req, res) => {
  var body, token, user;
  body = (await json(req));
  user = (await services.Login.login({
    username: body.username,
    password: body.password
  }));
  // 生成token
  token = generateToken(user.objectId, user.sessionToken);
  // 对返回的数据进行处理干掉敏感信息
  if ((user != null ? user.objectId : void 0) != null) {
    delete user.objectId;
  }
  if ((user != null ? user.sessionToken : void 0) != null) {
    delete user.sessionToken;
  }
  if ((user != null ? user.updatedAt : void 0) != null) {
    delete user.updatedAt;
  }
  if ((user != null ? user.createdAt : void 0) != null) {
    delete user.createdAt;
  }
  // 返回的数据
  return {user, token};
};

resetPsd = async(req, res) => {
  var body, result;
  body = (await json(req));
  return result = (await services.Login.resetPsd(body));
};

export {
  login,
  register,
  resetPsd
};
